hydra:
  run:
    dir: ./

train_file: reclor_data/train.json
dev_file: reclor_data/val.json
test_file: reclor_data/test.json

# Model
model:
  _target_: models.roberta_baseline.RobertaForMultipleChoiceForZeroShot.from_pretrained
#  _target_: models.roberta_baseline.RobertaForMultipleChoicePrompt.from_pretrained
  mlp_hidden_size: 2048
  fs_checkpoint: False
  fs_checkpoint_offload_to_cpu: False
  fs_checkpoint_maintain_forward_counter: False

# Data loading
read_tensor:
  _target_: dataset.reclor_sentence_prefix.convert_examples_into_features
#  _target_: dataset.reclor_sentence.convert_examples_into_features
  max_seq_length: 256
  num_workers: 2
  token_num: 5
#  token_num: 10
#  add_prefix_pos: True

extended_vocab: ${read_tensor.token_num}

# Data collator
collator:
  _target_: dataset.collators.ReClorSentenceCollator
#  _target_: dataset.collators.ReClorSentenceCollatorPrefixPos

# Dataloader
num_workers: 4
prefetch_factor: 2

# Wiki path pretrain v8.2
model_name_or_path: experiments/roberta.large.wiki_erica_path_v7_v8.2.2.1aug.fix.2080Ti/checkpoint-500

pretrain:

output_dir: experiments/roberta.large.wiki_erica_path_v8.2.2.1aug.ctx.1k.2080ti-cp500.5.1.w2.2080Ti.et${read_tensor.token_num}.s${seed}

do_train: True
evaluate_during_training: True

do_eval: True
eval_sub_path:

# Training hyper-parameters
per_gpu_train_batch_size: 1
per_gpu_eval_batch_size: 1
#learning_rate: 1e-5
learning_rate: 1.5e-5
gradient_accumulation_steps: 12
weight_decay: 0.01
adam_epsilon: 1e-6
adam_betas: "(0.9, 0.98)"
max_grad_norm: 0.0
num_train_epochs: 10
max_steps: 0
warmup_proportion: 0.1
warmup_steps: 0


logging_steps: 5
save_steps: -1
save_best: True
eval_steps: 100
no_cuda: False
seed: 42
local_rank: -1
fp16: True
fp16_opt_level: O1

# Prediction config
prediction_cfg:
  metric: "acc"
  measure: 1
  best_checkpoint:
  best_result:

# fairscale.FullyShardedDDP
reshard_after_forward: False
cpu_offload: False
move_grads_to_cpu: False
move_params_to_cpu: False

# Temporary variables
n_gpu:
device:
train_batch_size:
eval_batch_size:
world_size:
